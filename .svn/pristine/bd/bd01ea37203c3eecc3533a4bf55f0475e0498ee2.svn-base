{"version":3,"sources":["rocket.js"],"names":["Actor","require","cc","Class","extends","properties","white","SpriteFrame","black","init","actorType","arguments","color","dir","ENUM","MON_DIR","LEFT","DIR","DIR_LEFT","DIR_RIGHT","turnLeft","turnRight","hCurrSpeed","getHSpeed","sprite","node","getComponent","Sprite","MON_COLOR","BLACK","spriteFrame","scaleX","getSize","size","getContentSize","height","width","rect","x","y","die","isDie","scaleY","vCurrSpeed","vCurrAcceleration","hCurrAcceleration","EM","emit","type","SCORE_EFFECT","v2","pause","isPause","pauseAllActions","resume","resumeAllActions","update","dt","move","isOutScreen","removeFromParent","interactive","actor","sizeOne","sizeTwo","actorCollsition","isFlashing","isInvincible","isUpOrDown","littleJump","getFormState","FORM_STATE","SMALL","fsm","switchStateWithStack","switchState"],"mappings":"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","file":"rocket.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\monster","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        white:cc.SpriteFrame,\r\n        black:cc.SpriteFrame\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:    \r\n    init(){\r\n        this.actorType=arguments[0];\r\n        this.color=arguments[1];\r\n        this.dir=arguments[2]===ENUM.MON_DIR.LEFT?DIR.DIR_LEFT:DIR.DIR_RIGHT;\r\n        this.dir===DIR.DIR_LEFT?this.turnLeft():this.turnRight();\r\n        this.hCurrSpeed=this.getHSpeed();\r\n\r\n        this.sprite=this.node.getComponent(cc.Sprite);\r\n\r\n        this.color===ENUM.MON_COLOR.BLACK?this.sprite.spriteFrame=this.black:this.sprite.spriteFrame=this.white;\r\n    },\r\n    getHSpeed(){\r\n        return this.dir===DIR.DIR_LEFT?-180:180;\r\n    },\r\n    turnRight(){\r\n        this.node.scaleX=-1;\r\n        this.dir=DIR.DIR_RIGHT;\r\n    },\r\n    turnLeft(){\r\n        this.node.scaleX=1;\r\n        this.dir=DIR.DIR_LEFT;\r\n    },\r\n    getSize(){\r\n        let size=this.node.getContentSize();\r\n        let height=size.height;\r\n        let width=size.width;\r\n        return cc.rect(this.node.x,this.node.y,width,height);\r\n    },\r\n    die(){\r\n        this.isDie=true;\r\n        this.node.scaleY=-1;\r\n        this.node.y+=40;\r\n        this.vCurrSpeed=300;\r\n        this.vCurrAcceleration=-1400;\r\n        this.hCurrSpeed=0;\r\n        this.hCurrAcceleration=0;\r\n        EM.emit(EM.type.SCORE_EFFECT,cc.v2(this.node.x,this.node.y+80),200);\r\n    },\r\n    pause(){\r\n        this.isPause=true;\r\n        this.node.pauseAllActions();\r\n    },\r\n    resume(){\r\n        this.isPause=false;\r\n        this.node.resumeAllActions();\r\n    },\r\n    // onLoad () {},\r\n\r\n    update (dt) {\r\n        if(this.isPause)return;\r\n\r\n        this.move(dt);\r\n\r\n        if(this.isOutScreen()){\r\n            this.node.removeFromParent();\r\n        }\r\n    },\r\n    interactive(actor){\r\n        if(this.isDie||actor.isDie)return;\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n                //闪烁状态碰到怪物\r\n                if(actor.isFlashing){\r\n                    this.die();\r\n                }            //无敌状态碰到怪物\r\n                else if(actor.isInvincible){\r\n                    //踩到怪物\r\n                    if(sizeOne.y>=sizeTwo.y+sizeTwo.height/2&&!actor.isUpOrDown()){\r\n                        actor.littleJump();\r\n                        actor.node.y=sizeTwo.y+sizeTwo.height+1;\r\n                        this.die();\r\n                    }\r\n                }\r\n                //普通状态碰到蘑菇\r\n                else{\r\n                    //踩到蘑菇\r\n                    if(sizeOne.y>=sizeTwo.y+sizeTwo.height/2&&!actor.isUpOrDown()){\r\n                        actor.littleJump();\r\n                        actor.node.y=sizeTwo.y+sizeTwo.height+1;\r\n                        this.die();\r\n                    }else if(actor.getFormState()!==FORM_STATE.SMALL){\r\n                        actor.fsm.switchStateWithStack(\"to_small\");\r\n                    }else{\r\n                        actor.fsm.switchState(\"die\");\r\n                    }\r\n                }\r\n            }\r\n        \r\n    }\r\n});\r\n"]}