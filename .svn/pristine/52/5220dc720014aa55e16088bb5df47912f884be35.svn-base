(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/script/monster/monAex.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, '31e96HAlwhPY6HLHsWKQTXJ', 'monAex', __filename);
// script/monster/monAex.js

"use strict";

// Learn cc.Class:
//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var Actor = require("actor");

cc.Class({
    extends: Actor,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
        black: cc.SpriteFrame,
        white: cc.SpriteFrame
    },

    // LIFE-CYCLE CALLBACKS:
    init: function init(color, dir) {
        switch (color) {
            case ENUM.AEX_COLOR.WHITE:
                this.node.getComponent(cc.Sprite).spriteFrame = this.white;
                break;
            case ENUM.AEX_COLOR.BLACK:
                this.node.getComponent(cc.Sprite).spriteFrame = this.black;
                break;
        }
        this.collsiBox = this.node.getChildByName("box");
        switch (dir) {
            case DIR.DIR_LEFT:
                this.hCurrSpeed = -200;
                break;
            case DIR.DIR_RIGHT:
                this.hCurrSpeed = 200;
                break;
        }
        this.vCurrSpeed = 400;
        this.vCurrAcceleration = -1000;
        this.animation = this.node.getComponent(cc.Animation);
    },
    getSize: function getSize() {
        return cc.rect(0, 0, 0, 0);
    },
    interactive: function interactive(actor) {
        if (actor.isDie) return;
        var sizeOne = actor.getSize();
        var globalPos = actor.node.parent.convertToWorldSpace(cc.v2(sizeOne.x - sizeOne.width / 2, sizeOne.y));
        var playerBox = cc.rect(globalPos.x, globalPos.y, sizeOne.width, sizeOne.height);
        var box = this.collsiBox.getBoundingBoxToWorld();
        if (cc.Intersection.rectRect(playerBox, box)) {
            //闪烁状态碰到怪物
            if (!actor.isFlashing && !actor.isInvincible) {
                if (actor.getFormState() !== FORM_STATE.SMALL) {
                    actor.fsm.switchStateWithStack("to_small");
                } else {
                    actor.fsm.switchState("die");
                }
            }
            return;
        }
    },

    // onLoad () {},
    update: function update(dt) {
        if (this.isPause) return;

        this.move(dt);

        if (this.isOutScreen()) {
            this.node.removeFromParent();
        }
    },
    pause: function pause() {
        this.isPause = true;
        this.animation.pasue();
    },
    resume: function resume() {
        this.isPause = false;
        this.animation.resume();
    }
});

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=monAex.js.map
        