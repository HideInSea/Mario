{"version":3,"sources":["transition.js"],"names":["Actor","require","cc","Class","extends","properties","init","roadCheck","arguments","parseInt","desObj","gm","posMgr","posLayer","getObject","desPos","objectPosToMapPos","v2","x","y","getSize","rect","interactive","actor","node","oldPos","position","currPlayer","setPosition","offset","setMapToPos","resetObjects","monsterMgr","propMgr","removeFromParent","update","dt","isOutScreen"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAMC,QAAQ,OAAR,CAAV;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAAQJ,KADH;;AAGLK,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;AAoBLC,QApBK,kBAoBC;AACF,aAAKC,SAAL,GAAgBC,UAAU,CAAV,KAAcC,SAASD,UAAU,CAAV,CAAT,CAAf,IAAwC,CAAvD;;AAEA,YAAIE,SAAOC,GAAGC,MAAH,CAAUC,QAAV,CAAmBC,SAAnB,CAA6B,mBAAiBN,UAAU,CAAV,CAA9C,CAAX;AACA,aAAKO,MAAL,GAAYJ,GAAGC,MAAH,CAAUI,iBAAV,CAA4Bd,GAAGe,EAAH,CAAMP,OAAOQ,CAAb,EAAeR,OAAOS,CAAtB,CAA5B,CAAZ;AACH,KAzBI;AA0BLC,WA1BK,qBA0BI;AACL,eAAOlB,GAAGmB,IAAH,CAAQ,CAAR,EAAU,CAAV,EAAY,CAAZ,EAAc,CAAd,CAAP;AACH,KA5BI;;AA6BL;AACAC,eA9BK,uBA8BOC,KA9BP,EA8Ba;AACd,YAAGA,MAAMC,IAAN,CAAWN,CAAX,GAAa,KAAKM,IAAL,CAAUN,CAAvB,IAA0BK,MAAMC,IAAN,CAAWL,CAAX,IAAc,KAAKK,IAAL,CAAUL,CAAlD,IAAqDI,MAAMC,IAAN,CAAWL,CAAX,IAAc,KAAKK,IAAL,CAAUL,CAAV,GAAY,IAAE,EAApF,EAAuF;AACnF,gBAAG,KAAKZ,SAAL,KAAiBgB,MAAMhB,SAA1B,EAAoC;;AAEhC,oBAAIkB,SAAOF,MAAMC,IAAN,CAAWE,QAAtB;AACAf,mBAAGgB,UAAH,CAAcC,WAAd,CAA0B1B,GAAGe,EAAH,CAAM,KAAKF,MAAL,CAAYG,CAAZ,GAAcK,MAAMC,IAAN,CAAWN,CAAzB,GAA2B,KAAKM,IAAL,CAAUN,CAA3C,EAA6CP,GAAGgB,UAAH,CAAcR,CAA3D,CAA1B;;AAEA,oBAAIU,SAAOlB,GAAGgB,UAAH,CAAcT,CAAd,GAAgBO,OAAOP,CAAlC;;AAEAP,mBAAGC,MAAH,CAAUkB,WAAV,CAAsB5B,GAAGe,EAAH,CAAMN,GAAGa,IAAH,CAAQN,CAAR,GAAUW,MAAhB,EAAuBlB,GAAGa,IAAH,CAAQL,CAA/B,CAAtB;;AAEAR,mBAAGC,MAAH,CAAUmB,YAAV;AACApB,mBAAGqB,UAAH,CAAcD,YAAd;AACApB,mBAAGsB,OAAH,CAAWF,YAAX;AACH;AACDR,kBAAMhB,SAAN,GAAgB,CAAhB;AACA,iBAAKiB,IAAL,CAAUU,gBAAV;AACH;AACJ,KAhDI;AAiDLC,UAjDK,kBAiDGC,EAjDH,EAiDO;AACR,YAAG,KAAKC,WAAL,EAAH,EAAsB;AAClB,iBAAKb,IAAL,CAAUU,gBAAV;AACH;AACJ;AArDI,CAAT","file":"transition.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\prop","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\n\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    init(){\r\n        this.roadCheck=(arguments[2]&&parseInt(arguments[2]))||0;\r\n\r\n        let desObj=gm.posMgr.posLayer.getObject(\"transitionEnd_\"+arguments[1]);\r\n        this.desPos=gm.posMgr.objectPosToMapPos(cc.v2(desObj.x,desObj.y));\r\n    },\r\n    getSize(){\r\n        return cc.rect(0,0,0,0);\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    interactive(actor){\r\n        if(actor.node.x>this.node.x&&actor.node.y>=this.node.y&&actor.node.y<=this.node.y+3*40){\r\n            if(this.roadCheck===actor.roadCheck){\r\n\r\n                let oldPos=actor.node.position;\r\n                gm.currPlayer.setPosition(cc.v2(this.desPos.x+actor.node.x-this.node.x,gm.currPlayer.y));\r\n    \r\n                let offset=gm.currPlayer.x-oldPos.x;\r\n                \r\n                gm.posMgr.setMapToPos(cc.v2(gm.node.x-offset,gm.node.y));\r\n                \r\n                gm.posMgr.resetObjects();\r\n                gm.monsterMgr.resetObjects();\r\n                gm.propMgr.resetObjects();\r\n            }\r\n            actor.roadCheck=0;\r\n            this.node.removeFromParent();\r\n        }\r\n    },\r\n    update (dt) {\r\n        if(this.isOutScreen()){\r\n            this.node.removeFromParent();\r\n        }\r\n    }\r\n});\r\n"]}