{"version":3,"sources":["actor.js"],"names":["Actor","cc","Class","extends","Component","ctor","vCurrSpeed","vCurrAcceleration","hCurrSpeed","hCurrAcceleration","dir","DIR","DIR_RIGHT","fsm","oldPos","isPause","actorType","enableCollsi","enableMove","getActorType","init","turnLeft","DIR_LEFT","node","scaleX","turnRight","interactive","actor","backPos","position","getSize","getUpCollsiTile","size","tile","topMid","Vec2","x","y","height","gm","mapMgr","getObstacleTileAt","getLeftCollsiTile","topLeft","width","midLeft","bottomLeft","type","getRightCollsiTile","topRight","midRight","bottomRight","getDownCollsiTile","move","dt","isOutScreen","pos","convertToWorldSpace","v2","global","winSize","pause","resume","actorCollsition","sizeOne","sizeTwo","rectOne","rect","rectTwo","Intersection","rectRect","changeDir","collsiWithMon","collsiWithBullet","die","flat","collsiWithPushWall","wallBox","isDie","onCollsiPushWall","collsiWithPlayerBullet","bullet","onCollsiWithPBullet","module","exports"],"mappings":"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","file":"actor.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n//所有运动物体基类\r\n\r\nvar Actor= cc.Class({\r\n    extends:cc.Component,\r\n    ctor(){\r\n        this.vCurrSpeed=0;\r\n        this.vCurrAcceleration=0;\r\n        this.hCurrSpeed=0;\r\n        this.hCurrAcceleration=0;\r\n        this.dir=DIR.DIR_RIGHT;\r\n        this.fsm=null;\r\n        this.oldPos=null;\r\n        this.isPause=false;\r\n        this.actorType=null;\r\n        this.enableCollsi=true;\r\n        this.enableMove=true;\r\n    },\r\n    getActorType(){\r\n        return this.actorType;\r\n    },\r\n    init(){\r\n\r\n    },\r\n    turnLeft(){\r\n        this.dir=DIR.DIR_LEFT;\r\n        this.node.scaleX=-1;\r\n    },\r\n    turnRight(){\r\n        this.dir=DIR.DIR_RIGHT;\r\n        this.node.scaleX=1;\r\n    },\r\n    //与其他角色交互\r\n    interactive(actor){\r\n\r\n    },\r\n    //备份坐标\r\n    backPos(){\r\n        this.oldPos=this.node.position;\r\n    },\r\n    //获取自身包围盒\r\n    getSize(){  \r\n\r\n    },\r\n    //角色与墙体的碰撞检测:\r\n    //上：检测头顶中心点的碰撞类型\r\n    //左、右: 分别检测上、中、下三点的碰撞类型\r\n    //下：检测左右两点的碰撞类型\r\n    getUpCollsiTile(){\r\n        let size=this.getSize();\r\n        let tile=null;\r\n        //top\r\n        //let topleftMid=new cc.Vec2(size.x-3,size.y+size.height);\r\n        let topMid=new cc.Vec2(size.x,size.y+size.height);\r\n        // tile=gm.mapMgr.getWallObstacleTileAt(topleftMid);\r\n        // if(tile.type)return tile;\r\n        // tile=gm.mapMgr.getLandObstacleTileAt(topleftMid);\r\n        // if(tile.type)return tile;\r\n        tile=gm.mapMgr.getObstacleTileAt(topMid);\r\n        return  tile;\r\n    },\r\n    getLeftCollsiTile(){\r\n        let size=this.getSize();\r\n        let tile=null;\r\n        //left\r\n        let topLeft=new cc.Vec2(size.x-size.width/2,size.y+size.height);\r\n        let midLeft=new cc.Vec2(size.x-size.width/2,size.y+size.height/2);\r\n        let bottomLeft=new cc.Vec2(size.x-size.width/2,size.y+1);\r\n\r\n        tile=gm.mapMgr.getObstacleTileAt(bottomLeft);\r\n        if(tile.type)return tile;\r\n        tile=gm.mapMgr.getObstacleTileAt(midLeft);\r\n        if(tile.type)return tile;\r\n        tile=gm.mapMgr.getObstacleTileAt(topLeft);\r\n        return tile;\r\n    },\r\n    getRightCollsiTile(){\r\n        let size=this.getSize();\r\n        let tile=null;\r\n        //right\r\n        let topRight=new cc.Vec2(size.x+size.width/2,size.y+size.height);\r\n        let midRight=new cc.Vec2(size.x+size.width/2,size.y+size.height/2);\r\n        let bottomRight=new cc.Vec2(size.x+size.width/2,size.y+1);\r\n\r\n        tile=gm.mapMgr.getObstacleTileAt(bottomRight);\r\n        if(tile.type)return tile;\r\n        tile=gm.mapMgr.getObstacleTileAt(midRight);\r\n        if(tile.type)return tile;  \r\n        tile=gm.mapMgr.getObstacleTileAt(topRight);\r\n        return tile;\r\n    },\r\n    getDownCollsiTile(){\r\n        let size=this.getSize();\r\n        let tile=null;\r\n        //bottom\r\n        let bottomRight=new cc.Vec2(size.x+size.width/2,size.y-1);\r\n        let bottomLeft=new cc.Vec2(size.x-size.width/2,size.y-1);\r\n        tile=gm.mapMgr.getObstacleTileAt(bottomLeft);\r\n        if(tile.type)return tile;\r\n        tile=gm.mapMgr.getObstacleTileAt(bottomRight);\r\n        return tile;\r\n    },\r\n    move(dt){\r\n        //垂直方向的运动更新\r\n        this.node.y+=this.vCurrSpeed*dt+this.vCurrAcceleration*dt*dt*.5;\r\n        this.vCurrSpeed+=this.vCurrAcceleration*dt;\r\n\r\n        //水平方向的运动更新\r\n        this.node.x+=this.hCurrSpeed*dt+this.hCurrAcceleration*dt*dt*.5;\r\n        this.hCurrSpeed+=this.hCurrAcceleration*dt;\r\n    },\r\n    isOutScreen(){\r\n        let pos=this.node.convertToWorldSpace(cc.v2(0,0));\r\n        if(pos.x>global.winSize.width+80||pos.x<-80||pos.y<-120||pos.y>global.winSize.height+80){\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    pause(){\r\n\r\n    },\r\n    resume(){\r\n\r\n    },\r\n    actorCollsition(sizeOne,sizeTwo){\r\n        let rectOne=cc.rect(sizeOne.x-sizeOne.width/2,sizeOne.y,sizeOne.width,sizeOne.height);\r\n        let rectTwo=cc.rect(sizeTwo.x-sizeTwo.width/2,sizeTwo.y,sizeTwo.width,sizeTwo.height);\r\n        if(cc.Intersection.rectRect(rectOne,rectTwo)){\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    //改变方向\r\n    changeDir(){\r\n\r\n    },\r\n    //与怪物的碰撞检测\r\n    collsiWithMon(actor){\r\n\r\n    },\r\n    //与玩家子弹的碰撞检测\r\n    collsiWithBullet(actor){\r\n\r\n    },\r\n    //死亡\r\n    die(){\r\n\r\n    },\r\n    //被踩\r\n    flat(){\r\n\r\n    },\r\n    //与被顶墙体的碰撞检测\r\n    collsiWithPushWall(wallBox){\r\n        if(this.isDie)return;\r\n        let size=this.getSize();\r\n        if(this.actorCollsition(size,wallBox)){\r\n            this.onCollsiPushWall(wallBox);\r\n        }\r\n    },\r\n    onCollsiPushWall(wallBox){\r\n\r\n    },\r\n    //与玩家子弹碰撞\r\n    collsiWithPlayerBullet(bullet){\r\n        if(this.isDie||bullet.isDie)return;\r\n        let sizeOne=bullet.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            this.onCollsiWithPBullet(bullet);\r\n        }\r\n    },\r\n    onCollsiWithPBullet(bullet){\r\n    \r\n    }\r\n});\r\n\r\nmodule.exports=Actor;"]}