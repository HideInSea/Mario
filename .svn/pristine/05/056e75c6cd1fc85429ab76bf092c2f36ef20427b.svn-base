{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\monster/assets\\script\\monster\\hedgehog.js"],"names":["Actor","require","cc","Class","extends","properties","init","animation","node","getComponent","Animation","borth","isOnLand","hDefSpe","isBorthing","vCurrAcceleration","vCurrSpeed","play","interactive","actor","isDie","sizeOne","getSize","sizeTwo","actorCollsition","isFlashing","die","isInvincible","getFormState","FORM_STATE","SMALL","fsm","switchStateWithStack","switchState","size","getContentSize","height","width","rect","x","y","update","dt","isPause","enableMove","backPos","move","enableCollsi","tile","getDownCollsiTile","type","TILE_TYPE","LAND","PIPE_H_ENTRY","WALL","PIPE_V_ENTRY","QUESTION","collsiDown","getRightCollsiTile","collsiRight","getLeftCollsiTile","collsiLeft","isOutScreen","EM","emit","HEDGEHOG_DIE","removeFromParent","turnRight","turnLeft","oldPos","dir","getDir","DIR","DIR_LEFT","gm","currPlayer","DIR_RIGHT","scaleX","hCurrSpeed","pause","resume","changeDir","scaleY","hCurrAcceleration","SCORE_EFFECT","v2","collsiWithMon","getActorType","ENUM","MON_TYPE","ROCKET","DUCK","HELMET","onCollsiPushWall","wallBox","onCollsiWithPBullet","bullet"],"mappings":"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","file":"hedgehog.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\monster","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\n\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    init(){\r\n        this.animation=this.node.getComponent(cc.Animation);\r\n        this.borth();\r\n        this.isOnLand=false;\r\n        this.hDefSpe=80;\r\n    },\r\n    borth(){\r\n        this.isBorthing=true;\r\n        this.vCurrAcceleration=-1000;\r\n        this.vCurrSpeed=300;\r\n        this.animation.play(\"borth\");\r\n    },  \r\n    // onLoad () {},\r\n    interactive(actor){\r\n        if(this.isDie||actor.isDie)return;\r\n\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            //闪烁状态碰到怪物\r\n            if(actor.isFlashing){\r\n                this.die();\r\n            }\r\n            //无敌状态碰到怪物\r\n            else if(actor.isInvincible){\r\n\r\n            }\r\n            //普通状态碰到蘑菇\r\n            else{\r\n                //踩到蘑菇\r\n                if(actor.getFormState()!==FORM_STATE.SMALL){\r\n                    actor.fsm.switchStateWithStack(\"to_small\");\r\n                }else{\r\n                    actor.fsm.switchState(\"die\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getSize(){\r\n        let size=this.node.getContentSize();\r\n        let height=size.height-4;\r\n        let width=size.width-4;\r\n        return cc.rect(this.node.x,this.node.y,width,height);\r\n    },\r\n    update (dt) {\r\n        if(this.isPause)return;\r\n\r\n        if(this.enableMove){\r\n            this.backPos();\r\n\r\n            this.move(dt);\r\n    \r\n\r\n        }\r\n\r\n        if(this.enableCollsi){\r\n            let tile=null;\r\n            //脚底的碰撞检测\r\n            tile=this.getDownCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiDown(tile.tile);\r\n                    break;                    \r\n                }\r\n            }else{\r\n                if(this.isOnLand&&!this.isBorthing){\r\n                    this.isOnLand=false;\r\n                    this.vCurrSpeed=-380;\r\n                }\r\n            }\r\n    \r\n            tile=this.getRightCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiRight(tile.tile);\r\n                    break;                    \r\n                }\r\n            }\r\n    \r\n    \r\n            tile=this.getLeftCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiLeft(tile.tile);\r\n                    break;                    \r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.isOutScreen()){\r\n            EM.emit(EM.type.HEDGEHOG_DIE);\r\n            this.node.removeFromParent();\r\n        }\r\n    },\r\n    collsiLeft(tile){\r\n        this.turnRight();\r\n        this.node.x=this.getSize().width/2+tile.node.x+40+1;\r\n    },\r\n    collsiRight(tile){\r\n        this.turnLeft();\r\n        this.node.x=tile.node.x-this.getSize().width/2-1;\r\n    },\r\n    collsiDown(tile){\r\n        if(this.isOnLand)return;\r\n        let size=this.getSize();\r\n        if((this.oldPos.y>=tile.node.y)\r\n        &&((this.oldPos.x-size.width/2>=tile.node.x&&this.oldPos.x-size.width/2<=tile.node.x+40)\r\n        ||(this.oldPos.x+size.width/2>=tile.node.x&&this.oldPos.x+size.width/2<=tile.node.x+40))){\r\n            if(this.isBorthing){\r\n                this.isBorthing=false;\r\n                this.animation.play(\"walk\");\r\n                this.dir=this.getDir();\r\n                this.dir===DIR.DIR_LEFT?this.turnLeft():this.turnLeft();\r\n            }\r\n            this.isOnLand=true;\r\n            this.node.y=tile.node.y+40;\r\n            this.vCurrSpeed=0;\r\n            this.vCurrAcceleration=0;\r\n        }\r\n    },\r\n    getDir(){\r\n        if(this.node.x>gm.currPlayer.x){\r\n            return DIR.DIR_LEFT;\r\n        }else{\r\n            return DIR.DIR_RIGHT;\r\n        }\r\n    },\r\n\r\n    turnRight(){\r\n        this.dir=DIR.DIR_RIGHT;\r\n        this.node.scaleX=-1;\r\n        this.hCurrSpeed=this.hDefSpe;\r\n    },\r\n    turnLeft(){\r\n        this.dir=DIR.DIR_LEFT;\r\n        this.node.scaleX=1;\r\n        this.hCurrSpeed=-this.hDefSpe;\r\n    },\r\n    pause(){\r\n        this.isPause=true;\r\n        this.animation.pause();\r\n    },\r\n    resume(){\r\n        this.isPause=false;\r\n        this.animation.resume();\r\n    },\r\n    changeDir(){\r\n        this.dir===DIR.DIR_LEFT?this.turnRight():this.turnLeft();\r\n    },\r\n    die(){\r\n        this.isDie=true;\r\n        this.node.scaleY=-1;\r\n        this.node.y+=40;\r\n        this.vCurrSpeed=300;\r\n        this.vCurrAcceleration=-1400;\r\n        this.hCurrSpeed=0;\r\n        this.hCurrAcceleration=0;\r\n        this.enableCollsi=false;\r\n        this.animation.play(\"die\");\r\n        EM.emit(EM.type.SCORE_EFFECT,cc.v2(this.node.x,this.node.y+80),200);\r\n    },\r\n    //与怪物的碰撞检测\r\n    collsiWithMon(actor){\r\n        if(this.isDie||this.isBorthing)return;\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            if(actor.getActorType()===ENUM.MON_TYPE.ROCKET){\r\n                return;\r\n            }\r\n            if(actor.getActorType()===ENUM.MON_TYPE.DUCK||actor.getActorType()===ENUM.MON_TYPE.HELMET){return;}\r\n            else{\r\n                if(!actor.isDie)actor.changeDir();\r\n                this.changeDir();\r\n                this.node.x>actor.node.x?\r\n                this.node.x=sizeOne.x+sizeOne.width/2+sizeTwo.width/2+1:\r\n                this.node.x=sizeOne.x-sizeOne.width/2-sizeTwo.width/2-1;\r\n            }\r\n        }\r\n    },\r\n    onCollsiPushWall(wallBox){\r\n        this.node.y=wallBox.y+wallBox.height;\r\n    },\r\n    onCollsiWithPBullet(bullet){\r\n        bullet.die();\r\n        this.die();\r\n    }\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // update (dt) {},\r\n});\r\n"]}