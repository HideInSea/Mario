{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\prop/assets\\script\\prop\\spring.js"],"names":["Actor","require","cc","Class","extends","properties","red","SpriteFrame","gray","init","color","arguments","sprite","node","getComponent","Sprite","ENUM","PROP_COLOR","RED","spriteFrame","GRAY","animation","Animation","isOnSpring","spring","size","getSize","gm","currPlayer","y","height","playerScript","isKPressed","vCurrAcceleration","vMaxAcceleration","vCurrSpeed","getContentSize","rect","x","width","interactive","actor","isDie","sizeOne","sizeTwo","actorCollsition","oldPos","playerState","PLAYER_STATE","FALL","fsm","switchState","playSpringAni","hCurrSpeed","collsiWithMon","getActorType","MON_TYPE","ROCKET","changeDir","onCollsiWithPBullet","bullet","die","update","dt","isOutScreen","removeFromParent","play"],"mappings":"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","file":"spring.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\prop","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        red:cc.SpriteFrame,\r\n        gray:cc.SpriteFrame\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    init(){\r\n        this.color=arguments[1];\r\n        let sprite=this.node.getComponent(cc.Sprite);\r\n        switch(this.color){\r\n            case ENUM.PROP_COLOR.RED:\r\n                sprite.spriteFrame=this.red;\r\n            break;\r\n            case ENUM.PROP_COLOR.GRAY:\r\n                sprite.spriteFrame=this.gray;\r\n            break;\r\n        }\r\n        this.animation=this.node.getComponent(cc.Animation);\r\n        this.isOnSpring=false;\r\n    },\r\n    spring(){\r\n        this.isOnSpring=false;\r\n\r\n        let size=this.getSize();\r\n        gm.currPlayer.y=size.y+size.height;\r\n\r\n        if(gm.playerScript.isKPressed){\r\n            gm.playerScript.vCurrAcceleration=gm.playerScript.vMaxAcceleration;\r\n            gm.playerScript.vCurrSpeed=1800;\r\n        }else{\r\n            gm.playerScript.vCurrAcceleration=gm.playerScript.vMaxAcceleration;\r\n            gm.playerScript.vCurrSpeed=1000;\r\n        }\r\n    },\r\n    getSize(){\r\n        let size=this.node.getContentSize();\r\n        return cc.rect(this.node.x,this.node.y,size.width,size.height);\r\n    },\r\n    interactive(actor){\r\n        if(actor.isDie||this.isOnSpring)return;\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            //向下碰撞\r\n            if((actor.oldPos.y>this.node.y+sizeTwo.height)\r\n            &&((actor.oldPos.x-sizeOne.width/2>this.node.x-sizeTwo.width/2&&actor.oldPos.x-sizeOne.width/2<this.node.x+sizeTwo.width/2)\r\n            ||(actor.oldPos.x+sizeOne.width/2>this.node.x-sizeTwo.width/2&&actor.oldPos.x+sizeOne.width/2<this.node.x+sizeTwo.width/2))){\r\n                if(actor.playerState!==PLAYER_STATE.FALL){    \r\n                    actor.fsm.switchState(\"fall\");\r\n                }\r\n                this.isOnSpring=true;\r\n                actor.vCurrSpeed=0;\r\n                actor.vCurrAcceleration=0;\r\n                this.playSpringAni();\r\n                gm.currPlayer.y=sizeTwo.y+sizeTwo.height;\r\n                return;\r\n            }\r\n\r\n            //向左\r\n            if(this.node.x>actor.node.x&&actor.node.y<this.node.y+sizeTwo.height&&actor.node.y>=this.node.y){\r\n                actor.hCurrSpeed=0;\r\n                actor.node.x=this.node.x-sizeTwo.width/2-sizeOne.width/2;\r\n            }   \r\n            //向右\r\n            else if(this.node.x<actor.node.x&&actor.node.y<this.node.y+sizeTwo.height&&actor.node.y>=this.node.y){\r\n                actor.node.x=this.node.x+sizeTwo.width/2+sizeOne.width/2;\r\n                actor.hCurrSpeed=0;\r\n            }           \r\n        }\r\n    },\r\n    collsiWithMon(actor){\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            if(actor.getActorType()===ENUM.MON_TYPE.ROCKET)return;\r\n            actor.changeDir();\r\n            if(sizeOne.x>this.node.x){\r\n                actor.node.x=this.node.x+sizeTwo.width/2+sizeOne.width/2;\r\n            }else{\r\n                actor.node.x=this.node.x-sizeTwo.width/2-sizeOne.width/2;\r\n            }\r\n        }\r\n    },\r\n    onCollsiWithPBullet(bullet){\r\n        bullet.die();\r\n    },\r\n    // onLoad () {},    \r\n\r\n    update (dt) {\r\n        if(this.isOutScreen()){\r\n            this.node.removeFromParent();\r\n        }\r\n\r\n        if(this.isOnSpring){\r\n            let size=this.getSize();\r\n            gm.currPlayer.y=size.y+size.height;\r\n        }\r\n    },\r\n    playSpringAni(){\r\n        switch(this.color){\r\n            case ENUM.PROP_COLOR.GRAY:\r\n            this.animation.play(\"spring_gray\");\r\n            break;\r\n            case ENUM.PROP_COLOR.RED:\r\n            this.animation.play(\"spring_red\");\r\n            break;\r\n        }\r\n    }\r\n});\r\n"]}