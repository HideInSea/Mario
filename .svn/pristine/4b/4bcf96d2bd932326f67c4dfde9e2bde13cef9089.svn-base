{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\monster/assets\\script\\monster\\monAex.js"],"names":["Actor","require","cc","Class","extends","properties","black","SpriteFrame","white","init","color","dir","ENUM","AEX_COLOR","WHITE","node","getComponent","Sprite","spriteFrame","BLACK","collsiBox","getChildByName","DIR","DIR_LEFT","hCurrSpeed","DIR_RIGHT","vCurrSpeed","vCurrAcceleration","animation","Animation","getSize","rect","interactive","actor","isDie","sizeOne","globalPos","parent","convertToWorldSpace","v2","x","width","y","playerBox","height","box","getBoundingBoxToWorld","Intersection","rectRect","isFlashing","isInvincible","getFormState","FORM_STATE","SMALL","fsm","switchStateWithStack","switchState","update","dt","isPause","move","isOutScreen","removeFromParent","pause","pasue","resume"],"mappings":"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","file":"monAex.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\monster","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\n\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        black:cc.SpriteFrame,\r\n        white:cc.SpriteFrame,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    init(color,dir){\r\n        switch(color){\r\n            case ENUM.AEX_COLOR.WHITE:\r\n            this.node.getComponent(cc.Sprite).spriteFrame=this.white;\r\n            break;\r\n            case ENUM.AEX_COLOR.BLACK:\r\n            this.node.getComponent(cc.Sprite).spriteFrame=this.black;\r\n            break;\r\n        }\r\n        this.collsiBox=this.node.getChildByName(\"box\");\r\n        switch(dir){\r\n            case DIR.DIR_LEFT:\r\n                this.hCurrSpeed=-200;\r\n            break;\r\n            case DIR.DIR_RIGHT:\r\n                this.hCurrSpeed=200;\r\n            break;\r\n        }\r\n        this.vCurrSpeed=400;\r\n        this.vCurrAcceleration=-1000;\r\n        this.animation=this.node.getComponent(cc.Animation);\r\n    },\r\n    getSize(){\r\n        return cc.rect(0,0,0,0);\r\n    },\r\n    interactive(actor){\r\n        if(actor.isDie)return;\r\n        let sizeOne=actor.getSize();\r\n        let globalPos=actor.node.parent.convertToWorldSpace(cc.v2(sizeOne.x-sizeOne.width/2,sizeOne.y));\r\n        let playerBox=cc.rect(globalPos.x,globalPos.y,sizeOne.width,sizeOne.height);\r\n        let box=this.collsiBox.getBoundingBoxToWorld();\r\n        if(cc.Intersection.rectRect(playerBox,box)){\r\n            //闪烁状态碰到怪物\r\n            if(!actor.isFlashing&&!actor.isInvincible){\r\n                if(actor.getFormState()!==FORM_STATE.SMALL){\r\n                    actor.fsm.switchStateWithStack(\"to_small\");\r\n                }else{\r\n                    actor.fsm.switchState(\"die\");\r\n                }\r\n            }\r\n            return;\r\n            }\r\n    },\r\n    // onLoad () {},\r\n    update (dt) {\r\n        if(this.isPause)return;\r\n        \r\n        this.move(dt);\r\n\r\n        if(this.isOutScreen()){\r\n            this.node.removeFromParent();\r\n        }\r\n\r\n    },\r\n    pause(){\r\n        this.isPause=true;\r\n        this.animation.pasue();\r\n    },\r\n    resume(){\r\n        this.isPause=false;\r\n        this.animation.resume();\r\n    }\r\n});\r\n"]}