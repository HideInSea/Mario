{"version":3,"sources":["FSM.js"],"names":["FSM","cc","Class","_stateList","currState","_stateStack","subState","ctor","setDefaultState","name","getState","onEnter","handleInput","input","update","dt","addState","state","setFsm","switchState","args","slice","call","arguments","onExit","apply","switchPreState","pop","resume","switchStateWithStack","pause","push","switchSubState","clearSubState","pauseSubState","resumeSubState","module","exports"],"mappings":"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","file":"FSM.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\state","sourcesContent":["/*\r\n * @Description: FSM(finite state machine)有限状态机，管理各个状态的切换\r\n * @Author: your name\r\n * @LastEditors: Please set LastEditors\r\n * @Date: 2019-03-02 10:18:38\r\n * @LastEditTime: 2019-03-16 15:49:49\r\n */\r\n\r\nvar FSM=cc.Class({\r\n    _stateList:null,            //状态列表\r\n    currState:null,            //当前状态\r\n    _stateStack:null,           //状态栈\r\n    subState:null,              //子状态，不会影响currState\r\n    ctor(){\r\n        this._stateList={};\r\n        this._stateStack=[];\r\n    },\r\n    //设置默认转态\r\n    setDefaultState(name){\r\n        this.currState=this.getState(name);\r\n        if(this.currState){\r\n            this.currState.onEnter();\r\n        }\r\n    },\r\n    getState(name){\r\n        return this._stateList[name]||null;\r\n    },\r\n    handleInput(input){\r\n        if(this.currState)this.currState.handleInput(input);\r\n        if(this.subState)this.subState.handleInput(input);\r\n    },\r\n    update(dt){\r\n        if(this.currState)this.currState.update(dt);\r\n        if(this.subState)this.subState.update(dt);\r\n    },\r\n    /**\r\n     * 添加状态\r\n     */\r\n    addState(state){\r\n        this._stateList[state.name]=state;\r\n        state.setFsm(this);\r\n    },\r\n    //切换状态\r\n    switchState(name){\r\n        let args=[].slice.call(arguments,1);\r\n        this.currState.onExit();\r\n        this.currState=this.getState(name);\r\n        this.currState.onEnter.apply(this.currState,args);\r\n    },\r\n    //切换上一个状态\r\n    switchPreState(){\r\n        this.currState.onExit();\r\n        this.currState=this._stateStack.pop();\r\n        this.currState.resume();\r\n    },\r\n    //切换状态并保存上一个状态\r\n    switchStateWithStack(name){\r\n        this.currState.pause();\r\n        this._stateStack.push(this.currState);\r\n        this.currState=this.getState(name);\r\n        this.currState.onEnter();\r\n    },\r\n    //切换子状态\r\n    switchSubState(name){\r\n        if(this.subState){\r\n            this.subState.onExit();\r\n        }   \r\n        this.subState=this.getState(name);\r\n        this.subState.onEnter();\r\n    },\r\n    \r\n    clearSubState(){\r\n        if(this.subState){\r\n            this.subState.onExit();\r\n        }\r\n        this.subState=null;\r\n    },\r\n    //暂停子状态\r\n    pauseSubState(){\r\n        if(this.subState)this.subState.pause();\r\n    },\r\n    resumeSubState(){\r\n        if(this.subState)this.subState.resume();\r\n    }\r\n});\r\n\r\nmodule.exports=FSM;"]}