{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\monster/assets\\script\\monster\\mushroom.js"],"names":["Actor","require","FSM","Walk","Flat","TopTurn","cc","Class","extends","properties","init","animation","node","getComponent","Animation","dir","DIR","DIR_LEFT","actorType","arguments","type","state","hDefSpe","vDefSpe","isOnLand","isDie","fsm","addState","setDefaultState","interactive","actor","sizeOne","getSize","sizeTwo","actorCollsition","isFlashing","die","isInvincible","y","height","isUpOrDown","littleJump","flat","getFormState","FORM_STATE","SMALL","switchStateWithStack","switchState","size","getContentSize","width","rect","x","update","dt","isPause","enableMove","backPos","move","isOutScreen","removeFromParent","enableCollsi","tile","getDownCollsiTile","TILE_TYPE","LAND","PIPE_H_ENTRY","WALL","PIPE_V_ENTRY","QUESTION","collsiDown","vCurrSpeed","getRightCollsiTile","collsiRight","getLeftCollsiTile","collsiLeft","turnRight","turnLeft","oldPos","vCurrAcceleration","DIR_RIGHT","hCurrSpeed","pause","resume","changeDir","EM","emit","SCORE_EFFECT","v2","collsiWithMon","getActorType","ENUM","MON_TYPE","DUCK","onCollsiPushWall","wallBox","onCollsiWithPBullet","bullet"],"mappings":"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","file":"mushroom.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\monster","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\nvar FSM=require(\"FSM\");\r\nvar {Walk,Flat,TopTurn}=require(\"mushroomState\");\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    init(){\r\n        this.animation=this.node.getComponent(cc.Animation);\r\n        this.dir=DIR.DIR_LEFT;\r\n        this.actorType=arguments[0];                              //方向\r\n        this.type=arguments[1];\r\n        this.state=null;\r\n        this.hDefSpe=90;\r\n        this.vDefSpe=-380;\r\n        this.isOnLand=true;\r\n        this.isDie=false;\r\n        this.fsm=new FSM();\r\n        this.fsm.addState(new Walk(this,\"walk\"));\r\n        this.fsm.addState(new Flat(this,\"flat\"));\r\n        this.fsm.addState(new TopTurn(this,\"topturn\"));\r\n        this.fsm.setDefaultState(\"walk\");\r\n    },\r\n    // onLoad () {},\r\n    interactive(actor){\r\n        if(this.isDie||actor.isDie||!this.isOnLand)return;\r\n\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            //闪烁状态碰到怪物\r\n            if(actor.isFlashing){\r\n                this.die();\r\n            }\r\n            //无敌状态碰到怪物\r\n            else if(actor.isInvincible){\r\n                //踩到蘑菇\r\n                if(sizeOne.y>=sizeTwo.y+sizeTwo.height/2&&!actor.isUpOrDown()){\r\n                    actor.littleJump();\r\n                    this.flat();\r\n                }\r\n            }\r\n            //普通状态碰到蘑菇\r\n            else{\r\n                //踩到蘑菇\r\n                if(sizeOne.y>=sizeTwo.y+sizeTwo.height/2){\r\n                    actor.littleJump();\r\n                    this.flat();\r\n                }else if(actor.getFormState()!==FORM_STATE.SMALL){\r\n                    actor.fsm.switchStateWithStack(\"to_small\");\r\n                }else{\r\n                    actor.fsm.switchState(\"die\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getSize(){\r\n        let size=this.node.getContentSize();\r\n        let height=size.height-4;\r\n        let width=size.width-4;\r\n        return cc.rect(this.node.x,this.node.y,width,height);\r\n    },\r\n    update (dt) {\r\n        if(this.isPause)return;\r\n\r\n        if(this.enableMove){\r\n            this.backPos();\r\n\r\n            this.move(dt);\r\n    \r\n            if(this.isOutScreen()){\r\n                this.node.removeFromParent();\r\n            }\r\n        }\r\n\r\n        if(this.enableCollsi){\r\n            let tile=null;\r\n            //脚底的碰撞检测\r\n            tile=this.getDownCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiDown(tile.tile);\r\n                    break;                    \r\n                }\r\n            }else{\r\n                if(this.isOnLand){\r\n                    this.isOnLand=false;\r\n                    this.vCurrSpeed=this.vDefSpe;\r\n                }\r\n            }\r\n    \r\n            tile=this.getRightCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiRight(tile.tile);\r\n                    break;                    \r\n                }\r\n            }\r\n    \r\n    \r\n            tile=this.getLeftCollsiTile();\r\n            if(tile.type){\r\n                switch(tile.type){\r\n                    case TILE_TYPE.LAND:\r\n                    case TILE_TYPE.PIPE_H_ENTRY:\r\n                    case TILE_TYPE.WALL:\r\n                    case TILE_TYPE.PIPE_V_ENTRY:  \r\n                    case TILE_TYPE.QUESTION:\r\n                        this.collsiLeft(tile.tile);\r\n                    break;                    \r\n                }\r\n            }\r\n    \r\n            this.fsm.update(dt);\r\n    \r\n        }\r\n    },\r\n    collsiLeft(tile){\r\n        this.turnRight();\r\n        this.node.x=this.getSize().width/2+tile.node.x+40+1;\r\n    },\r\n    collsiRight(tile){\r\n        this.turnLeft();\r\n        this.node.x=tile.node.x-this.getSize().width/2-1;\r\n    },\r\n    collsiDown(tile){\r\n        if(this.isOnLand)return;\r\n        let size=this.getSize();\r\n        if((this.oldPos.y>=tile.node.y)\r\n        &&((this.oldPos.x-size.width/2>=tile.node.x&&this.oldPos.x-size.width/2<=tile.node.x+40)\r\n        ||(this.oldPos.x+size.width/2>=tile.node.x&&this.oldPos.x+size.width/2<=tile.node.x+40))){\r\n            this.isOnLand=true;\r\n            this.node.y=tile.node.y+40;\r\n            this.vCurrSpeed=0;\r\n            this.vCurrAcceleration=0;\r\n        }\r\n    },\r\n    turnRight(){\r\n        this.dir=DIR.DIR_RIGHT;\r\n        this.hCurrSpeed=this.hDefSpe;\r\n    },\r\n    turnLeft(){\r\n        this.dir=DIR.DIR_LEFT;\r\n        this.hCurrSpeed=-this.hDefSpe;\r\n    },\r\n    pause(){\r\n        this.isPause=true;\r\n        this.animation.pause();\r\n    },\r\n    resume(){\r\n        this.isPause=false;\r\n        this.animation.resume();\r\n    },\r\n    changeDir(){\r\n        this.dir===DIR.DIR_LEFT?this.turnRight():this.turnLeft();\r\n    },\r\n    die(){\r\n        this.fsm.switchState(\"topturn\");\r\n        EM.emit(EM.type.SCORE_EFFECT,cc.v2(this.node.x,this.node.y+80),200);\r\n    },\r\n    flat(){\r\n        this.fsm.switchState(\"flat\");\r\n        EM.emit(EM.type.SCORE_EFFECT,cc.v2(this.node.x,this.node.y+80),200);\r\n    },\r\n    //与怪物的碰撞检测\r\n    collsiWithMon(actor){\r\n        if(this.isDie)return;\r\n        let sizeOne=actor.getSize();\r\n        let sizeTwo=this.getSize();\r\n        if(this.actorCollsition(sizeOne,sizeTwo)){\r\n            if(actor.getActorType()===ENUM.MON_TYPE.DUCK){return;}\r\n            else{\r\n                if(!actor.isDie)actor.changeDir();\r\n                this.changeDir();\r\n                this.node.x>actor.node.x?\r\n                this.node.x=sizeOne.x+sizeOne.width/2+sizeTwo.width/2+1:\r\n                this.node.x=sizeOne.x-sizeOne.width/2-sizeTwo.width/2-1;\r\n            }\r\n        }\r\n    },\r\n    onCollsiPushWall(wallBox){\r\n        this.die();\r\n    },\r\n    onCollsiWithPBullet(bullet){\r\n        bullet.die();\r\n        this.die();\r\n    }\r\n});\r\n"]}