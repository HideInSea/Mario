{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\monster/assets\\script\\monster\\monAex.js"],"names":["Actor","require","cc","Class","extends","properties","black","SpriteFrame","white","box","Node","init","color","arguments","dir","ENUM","MON_DIR","LEFT","DIR","DIR_LEFT","DIR_RIGHT","AEX_COLOR","WHITE","node","getComponent","Sprite","spriteFrame","BLACK","playRollAni","vCurrSpeed","vCurrAcceleration","hCurrSpeed","getHSpeed","getSize","rect","interactive","actor","isDie","sizeOne","globalPos","parent","convertToWorldSpace","v2","x","width","y","playerBox","height","getBoundingBoxToWorld","Intersection","rectRect","isFlashing","isInvincible","getFormState","FORM_STATE","SMALL","fsm","switchStateWithStack","switchState","update","dt","isPause","move","isOutScreen","removeFromParent","turnLeft","scaleX","turnRight","rollLeft","rotateBy","runAction","repeatForever","rollRight","pause","pauseAllActions","resume","resumeAllActions"],"mappings":"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","file":"monAex.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\monster","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar Actor=require(\"actor\");\r\n\r\ncc.Class({\r\n    extends:Actor,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        black:cc.SpriteFrame,\r\n        white:cc.SpriteFrame,\r\n        box:cc.Node\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    init(){\r\n        this.color=arguments[1];\r\n        this.dir=arguments[2]===ENUM.MON_DIR.LEFT?DIR.DIR_LEFT:DIR.DIR_RIGHT;\r\n\r\n        switch(this.color){\r\n            case ENUM.AEX_COLOR.WHITE:\r\n            this.node.getComponent(cc.Sprite).spriteFrame=this.white;\r\n            break;\r\n            case ENUM.AEX_COLOR.BLACK:\r\n            this.node.getComponent(cc.Sprite).spriteFrame=this.black;\r\n            break;\r\n        }\r\n        this.playRollAni();\r\n        this.vCurrSpeed=300;\r\n        this.vCurrAcceleration=-1000;\r\n        this.hCurrSpeed=this.getHSpeed();\r\n    },\r\n    getSize(){\r\n        return cc.rect(0,0,0,0);\r\n    },\r\n    interactive(actor){\r\n        if(actor.isDie)return;\r\n        let sizeOne=actor.getSize();\r\n        let globalPos=actor.node.parent.convertToWorldSpace(cc.v2(sizeOne.x-sizeOne.width/2,sizeOne.y));\r\n        let playerBox=cc.rect(globalPos.x,globalPos.y,sizeOne.width,sizeOne.height);\r\n        let box=this.box.getBoundingBoxToWorld();\r\n        if(cc.Intersection.rectRect(playerBox,box)){\r\n            //闪烁状态碰到怪物\r\n            if(!actor.isFlashing&&!actor.isInvincible){\r\n                if(actor.getFormState()!==FORM_STATE.SMALL){\r\n                    actor.fsm.switchStateWithStack(\"to_small\");\r\n                }else{\r\n                    actor.fsm.switchState(\"die\");\r\n                }\r\n            }\r\n            return;\r\n        }\r\n    },\r\n    // onLoad () {},\r\n    update (dt) {\r\n        if(this.isPause)return;\r\n        \r\n        this.move(dt);\r\n\r\n        if(this.isOutScreen()){\r\n            this.node.removeFromParent();\r\n        }\r\n\r\n    },\r\n    turnLeft(){\r\n        this.node.scaleX=1;\r\n        this.dir=DIR.DIR_LEFT;\r\n    },\r\n    turnRight(){\r\n        this.node.scaleX=-1;\r\n        this.dir=DIR.DIR_RIGHT;\r\n    },\r\n    getHSpeed(){\r\n        return this.dir===DIR.DIR_LEFT?-200:200;\r\n    },\r\n    playRollAni(){\r\n        if(this.dir===DIR.DIR_LEFT){\r\n            this.turnLeft();\r\n            let rollLeft=cc.rotateBy(0.5,-360);\r\n            this.node.runAction(cc.repeatForever(rollLeft));    \r\n        }else{\r\n            this.turnRight();\r\n            let rollRight=cc.rotateBy(0.5,360);\r\n            this.node.runAction(cc.repeatForever(rollRight));\r\n        }\r\n    },\r\n    pause(){\r\n        this.isPause=true;\r\n        this.node.pauseAllActions();\r\n    },\r\n    resume(){\r\n        this.isPause=false;\r\n        this.node.resumeAllActions();\r\n    }\r\n});\r\n"]}